#!/bin/sh

### BEGIN INIT INFO
# Provides:          unicorn
# Short-Description: starts the unicorn web server
# Description:       starts unicorn web server using start-stop-daemon
### END INIT INFO

# Return values
SUCCESS=0
FAILED=1

# Get everything we want set
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=unicorn_rails

NAME=unicorn
DESC=unicorn
UID=www-data
GID=www-data

APP_DIR="/var/www/current"
SHARED_DIR="/var/www/shared"
BUNDLE_DIR="$SHARED_DIR/bundle"

PID="/var/www/shared/pids/${NAME}.pid"
OLDPID="$PID.oldbin"
TIMEOUT=${TIMEOUT-60}

DAEMON_OPTS="--daemonize --config-file /etc/unicorn/app.rb --env <%= @environment %>"

if [ -e "$APP_DIR/Gemfile" ]; then
        export PATH="$BUNDLE_DIR/bin:$PATH"
fi

# Signal a PID
# $1: signal
# $2: path to pid file
sig () {
        if [ -s $2 ]; then
                kill -s $1 `cat $2`;
                echo 0;
        else
                echo 1;
        fi
}

DAEMON=`which $DAEMON`
# Make sure we have something to run!
test -x $DAEMON || exit $FAILED

set -e

. /lib/lsb/init-functions

case "$1" in
  start)
        echo -n "Starting $DESC: "
        start-stop-daemon --start --quiet --pidfile $PID \
                --group $GID --chuid $UID --exec $DAEMON -- $DAEMON_OPTS
        echo "$NAME."
        ;;
  stop)
        echo -n "Stopping $DESC: "
        if [ $(sig QUIT $PID) ]; then
                echo "$NAME."
        else
                echo "Failed."
                exit $FAILED
        fi
        ;;
  restart|force-reload)
        echo -n "Restarting $DESC: "
        if [ $(sig HUP $PID) ]; then
                echo "$NAME."
        else
                echo "Failed." && exit $FAILED
        fi
        ;;
  reopen-logs)
        echo -n "Reopening log files: "
        if [ $(sig USR1 $PID) ]; then
                echo " OK."
        else
                echo "Failed." && exit $FAILED
        fi
        ;;
  upgrade)
        echo -n "Upgrading $NAME environment."
        if [ $(sig USR2 $PID) ]; then
                sleep 2
                if [ $(sig 0 $PID) -a $(sig QUIT $OLDPID) ]; then
                        n=$TIMEOUT
                        while [ -s $OLDPID -a $n -ge 0 ]
                        do
                                echo -n "."
                                sleep 1
                                n=$(( n - 1 ))
                        done
                        if [ -s $OLDPID -a $n -lt 0 ]; then
                                echo ""
                                echo "Failed to upgrade $NAME. $OLDPID still exists after $TIMEOUT seconds."
                                exit $FAILED
                        fi
                else
                        echo ""
                        echo "Bad response received from $NAME."
                        exit $FAILED
                fi
                echo " OK."
        else
                echo ""
                echo "Failed to locate running instance of unicorn. Starting instead."
                echo -n "Starting $DESC: "
                start-stop-daemon --start --quiet --pidfile $PID \
                        --chuid $UID --group $GID --exec $DAEMON -- $DAEMON_OPTS
                echo "$NAME."
        fi
        ;;
  status)
        status_of_proc -p $PID "$DAEMON" "$NAME" && exit 0 || exit $?
        ;;
  *)
        echo "Usage: $NAME {start|stop|restart|force-reload|upgrade|reopen-logs|status}" >&2
        exit 1
        ;;
esac

exit $SUCCESS
